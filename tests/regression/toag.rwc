device top_level:

inputs [("__in0",1)]
outputs [("__out0",1)]
states []

$Pure.dispatch :: W3 -> W1 -> W4
$Pure.dispatch $0 $1 = 4'case {1'$1, 3'$0} of
    {1'@, 2'h1, 1'_} -> $LL.Pure.dispatch4
    _ -> 4'case {1'$1, 3'$0} of
      {1'_, 2'h2, 1'_} -> 4'h2
      _ -> 4'case {1'$1, 3'$0} of
        {1'@, 2'h3, 1'@} -> $LL.Pure.dispatch3
        _ -> 4'case {1'$1, 3'$0} of
          {1'@, 2'h0, 1'@} -> $LL.Pure.dispatch3

$Pure.start :: W4
$Pure.start  = 4'h2

$LL.Pure.dispatch5 :: W1 -> W1 -> W4
$LL.Pure.dispatch5 $0 $1 = 4'case {1'$1, 1'$0} of
    {1'@, 1'@} -> $LL.Main.go13

$LL.Main.go13 :: W1 -> W1 -> W4
$LL.Main.go13 $0 $1 = {1'case {1'case {1'$1, 1'$0, 1'$1} of {1'@, 1'@, 1'@} -> $LL.Main.go5, 1'$1} of
    {1'@, 1'@} -> ReWire.Prelude.&&
  , 3'h4}

$LL.Main.go12 :: W1 -> W4
$LL.Main.go12 $0 = {3'h0, 1'$0}

$LL.Pure.dispatch4 :: W1 -> W4
$LL.Pure.dispatch4 $0 = 4'case 1'$0 of
    {1'@} -> $LL.Main.go10

$LL.ReWire.Prelude.&&3 :: W2 -> W1
$LL.ReWire.Prelude.&&3 $0 = 1'case 2'$0 of
    {1'h0, 1'_} -> 1'h0

$LL.Main.go10 :: W1 -> W4
$LL.Main.go10 $0 = 4'case {1'$0, 1'$0} of
    {1'@, 1'h1} -> $LL.Main.go12
    _ -> 4'case {1'$0, 1'$0, 1'$0} of
      {1'@, 1'@, 1'h0} -> $LL.Main.go4

$LL.Pure.dispatch3 :: W1 -> W1 -> W4
$LL.Pure.dispatch3 $0 $1 = 4'case {1'$0, 1'$1} of
    {1'@, 1'@} -> $LL.Pure.dispatch5

$LL.ReWire.Prelude.&&1 :: W1 -> W1 -> W2 -> W1
$LL.ReWire.Prelude.&&1 $0 $1 $2 = 1'case 2'$2 of
    {1'h1, 1'@} -> Id
    _ -> 1'case {1'$1, 1'$0} of
      {2'@} -> $LL.ReWire.Prelude.&&3

$LL.Main.go7 :: W1 -> W1 -> W4
$LL.Main.go7 $0 $1 = {1'$1, 2'h3, 1'$0}

ReWire.Prelude.&& :: W1 -> W1 -> W1
ReWire.Prelude.&& $0 $1 = 1'case {1'$1, 1'$0, 1'$0, 1'$1} of
    {1'@, 1'@, 2'@} -> $LL.ReWire.Prelude.&&1

$LL.Main.go6 :: W1 -> W1 -> W1
$LL.Main.go6 $0 $1 = 1'case {1'$0, 1'$1} of
    {1'@, 1'h0} -> $LL.Main.go

$LL.Main.go5 :: W1 -> W1 -> W1 -> W1
$LL.Main.go5 $0 $1 $2 = 1'case {1'$1, 1'$2} of
    {1'@, 1'h1} -> Id
    _ -> 1'case {1'$1, 1'$0} of
      {1'@, 1'@} -> $LL.Main.go6

$LL.Main.go4 :: W1 -> W1 -> W4
$LL.Main.go4 $0 $1 = 4'case {1'$0, 1'$1} of
    {1'@, 1'@} -> $LL.Main.go7

$LL.Main.go :: W1 -> W1
$LL.Main.go $0 = 1'case {1'$0, 1'$0} of
    {1'@, 1'@} -> ReWire.Prelude.&&