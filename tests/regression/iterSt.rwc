device top_level:

inputs [("__in0",1)]
outputs [("__out0",1)]
states [("__st0",1)]

$Pure.dispatch :: W1 -> W1 -> W5
$Pure.dispatch $0 $1 = 5'case {1'$1, 1'$0} of
    {1'@, 1'@} -> ReWire.Monad.iterSt1

$Pure.start :: W5
$Pure.start  = 5'h10

$LL.ReWire.Monad.iterSt36 :: W1 -> W1 -> W1 -> W3
$LL.ReWire.Monad.iterSt36 $0 $1 $2 = {2'case {1'$0, 1'$1} of {1'@, 1'@} -> Main.f1, 1'$2}

ReWire.Monad.iterSt1 :: W1 -> W1 -> W5
ReWire.Monad.iterSt1 $0 $1 = 5'case 5'case 3'case {1'$0, 1'$1, 1'$1} of
        {1'@, 2'@} -> $LL.ReWire.Monad.iterSt10 of
      {3'@} -> $LL.ReWire.Monad.iterSt30 of
    {5'@} -> $LL.ReWire.Monad.iterSt8

$LL.Main.f4 :: W1 -> W1 -> W1
$LL.Main.f4 $0 $1 = 1'case {1'$0, 1'$1} of
    {2'@} -> $LL.Main.f3

$LL.ReWire.Monad.iterSt35 :: W1 -> W1 -> W5
$LL.ReWire.Monad.iterSt35 $0 $1 = 5'case {1'$0, 1'$1} of
    {1'@, 1'@} -> $LL.ReWire.Monad.iterSt31

$LL.ReWire.Monad.iterSt34 :: W1 -> W1 -> W1 -> W5
$LL.ReWire.Monad.iterSt34 $0 $1 $2 = 5'case {1'$1, 1'$0, 1'$2} of
    {1'@, 1'@, 1'@} -> $LL.ReWire.Monad.iterSt

$LL.ReWire.Monad.iterSt31 :: W1 -> W1 -> W5
$LL.ReWire.Monad.iterSt31 $0 $1 = {3'h4, 1'$0, 1'$1}

$LL.ReWire.Monad.iterSt30 :: W3 -> W5
$LL.ReWire.Monad.iterSt30 $0 = 5'case 3'$0 of
    {2'@, 1'@} -> $LL.ReWire.Monad.iterSt29

$LL.ReWire.Monad.iterSt29 :: W2 -> W1 -> W5
$LL.ReWire.Monad.iterSt29 $0 $1 = {2'h0, 2'$0, 1'$1}

$LL.Main.f3 :: W2 -> W1
$LL.Main.f3 $0 = 1'case 2'$0 of
    {1'@, 1'@} -> $LL.Main.f1

$LL.Main.f2 :: W2 -> W2
$LL.Main.f2 $0 = 2'case 2'$0 of
    {1'@, 1'@} -> $LL.Main.f

$LL.Main.f1 :: W1 -> W1 -> W1
$LL.Main.f1 $0 $1 = 1'case 1'case {1'$0, 1'$1} of
      {1'@, 1'@} -> XOr of
    {1'@} -> MSBit

$LL.ReWire.Monad.iterSt19 :: W1 -> W5
$LL.ReWire.Monad.iterSt19 $0 = {4'h4, 1'$0}

Main.f1 :: W1 -> W1 -> W2
Main.f1 $0 $1 = 2'case {1'$0, 1'$1} of
    {2'@} -> $LL.Main.f2

$LL.ReWire.Monad.iterSt11 :: W2 -> W1 -> W5
$LL.ReWire.Monad.iterSt11 $0 $1 = 5'case {1'$1, 2'$0} of
    {1'@, 1'@, 1'@} -> $LL.ReWire.Monad.iterSt34

$LL.ReWire.Monad.iterSt10 :: W1 -> W2 -> W3
$LL.ReWire.Monad.iterSt10 $0 $1 = 3'case {1'$0, 2'$1} of
    {1'@, 1'@, 1'@} -> $LL.ReWire.Monad.iterSt36

$LL.ReWire.Monad.iterSt9 :: W1 -> W1 -> W1 -> W5
$LL.ReWire.Monad.iterSt9 $0 $1 $2 = 5'case {1'$0, 5'case 1'$1 of {1'@} -> $LL.ReWire.Monad.iterSt19} of
    {1'@, 5'@} -> $LL.ReWire.Monad.iterSt5

$LL.ReWire.Monad.iterSt8 :: W5 -> W5
$LL.ReWire.Monad.iterSt8 $0 = 5'case 5'$0 of
    {2'h0, 2'@, 1'@} -> $LL.ReWire.Monad.iterSt2

$LL.ReWire.Monad.iterSt5 :: W1 -> W5 -> W5
$LL.ReWire.Monad.iterSt5 $0 $1 = 5'case {1'$0, 5'$1} of
    {1'@, 2'h1, 2'_, 1'@} -> $LL.ReWire.Monad.iterSt35

$LL.Main.f :: W1 -> W1 -> W2
$LL.Main.f $0 $1 = {1'case {1'$1, 1'$0} of {1'@, 1'@} -> $LL.Main.f4, 1'$1}

$LL.ReWire.Monad.iterSt2 :: W2 -> W1 -> W5
$LL.ReWire.Monad.iterSt2 $0 $1 = 5'case {2'$0, 1'$1} of
    {2'@, 1'@} -> $LL.ReWire.Monad.iterSt11

$LL.ReWire.Monad.iterSt :: W1 -> W1 -> W1 -> W5
$LL.ReWire.Monad.iterSt $0 $1 $2 = 5'case {1'$0, 1'$2, 1'$1} of
    {1'@, 1'@, 1'@} -> $LL.ReWire.Monad.iterSt9