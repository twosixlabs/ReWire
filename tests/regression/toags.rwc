device top_level:

inputs [("__in0",1)]
outputs [("__out0",1)]
states [("__st0",1),("__st1",1)]

$Pure.dispatch :: W5 -> W1 -> W7
$Pure.dispatch $0 $1 = 7'case {1'$1, 5'$0} of
    {1'@, 2'h1, 1'@, 1'@, 1'@} -> $LL.Pure.dispatch2
    _ -> 7'case {1'$1, 5'$0} of
      {1'@, 2'h2, 1'@, 1'@, 1'@} -> $LL.Pure.dispatch5
      _ -> 7'case {1'$1, 5'$0} of
        {1'@, 2'h3, 1'_, 1'@, 1'@} -> $LL.Pure.dispatch6
        _ -> 7'case {1'$1, 5'$0} of
          {1'@, 2'h0, 1'@, 1'@, 1'@} -> $LL.Pure.dispatch5

$Pure.start :: W7
$Pure.start  = 7'h59

$LL.Main.go :: W1 -> W1 -> W7
$LL.Main.go $0 $1 = 7'case {1'$0, 1'$1} of
    {1'@, 1'@} -> Main.go

$LL.Main.go1 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Main.go1 $0 $1 $2 $3 = 7'case 7'case {1'$2, 1'$0} of
      {2'@} -> $LL.Main.go19 of
    {7'@} -> $LL.Main.go15

$LL.Main.go2 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Main.go2 $0 $1 $2 $3 = {1'h1
  , 1'case {1'case {1'$0, 1'$1} of {1'@, 1'h1} -> Id _ -> 1'case {1'$0, 1'$1} of {1'@, 1'h0} -> $LL.Main.go4, 1'$1} of
    {1'@, 1'@} -> ReWire.Prelude.&&
  , 2'h0
  , 1'$1
  , 1'$2
  , 1'$3}

$LL.Main.go4 :: W1 -> W1
$LL.Main.go4 $0 = 1'case {1'$0, 1'$0} of
    {1'@, 1'@} -> ReWire.Prelude.&&

$LL.Main.go7 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Main.go7 $0 $1 $2 $3 = {1'h1
  , 1'case {1'case {1'$0, 1'$1} of {1'@, 1'h1} -> Id _ -> 1'case {1'$0, 1'$1} of {1'@, 1'h0} -> $LL.Main.go4, 1'$1} of
    {1'@, 1'@} -> ReWire.Prelude.&&
  , 2'h2
  , 1'$1
  , 1'$2
  , 1'$3}

$LL.Main.go10 :: W1 -> W1 -> W1 -> W7
$LL.Main.go10 $0 $1 $2 = 7'case {1'$2, 1'$1, 1'$0, 1'$0} of
    {1'@, 1'@, 1'@, 1'h1} -> $LL.Main.go28
    _ -> 7'case {1'$2, 1'$1, 1'$0, 1'$0} of
      {1'@, 1'@, 1'@, 1'h0} -> $LL.Main.go30

$LL.Main.go11 :: W1 -> W1 -> W1 -> W7
$LL.Main.go11 $0 $1 $2 = {4'h9, 1'$0, 1'$1, 1'$2}

$LL.Main.go12 :: W1 -> W1 -> W1 -> W7
$LL.Main.go12 $0 $1 $2 = 7'case {1'$0, 7'case {1'$1, 1'$1, 1'$2} of {3'@} -> $LL.Main.go38} of
    {1'@, 7'@} -> $LL.Main.go34

$LL.Main.go15 :: W7 -> W7
$LL.Main.go15 $0 = 7'case 7'$0 of
    {1'h0, 2'_, 1'h0, 1'_, 1'@, 1'@} -> $LL.Main.go

$LL.Main.go16 :: W1 -> W1 -> W7
$LL.Main.go16 $0 $1 = {5'h00, 1'$0, 1'$1}

$LL.Main.go19 :: W2 -> W7
$LL.Main.go19 $0 = 7'case 2'$0 of
    {1'@, 1'@} -> $LL.Main.go16

$LL.Main.go27 :: W1 -> W1 -> W1 -> W7
$LL.Main.go27 $0 $1 $2 = 7'case {1'$2, 1'$1, 1'$0} of
    {1'@, 1'@, 1'@} -> $LL.Main.go11

$LL.Main.go28 :: W1 -> W1 -> W1 -> W7
$LL.Main.go28 $0 $1 $2 = 7'case {1'$0, 1'$1, 1'$2} of
    {1'@, 1'@, 1'@} -> $LL.Main.go27

$LL.Main.go29 :: W1 -> W1 -> W1 -> W7
$LL.Main.go29 $0 $1 $2 = 7'case {1'$2, 1'$1, 1'$0} of
    {1'@, 1'@, 1'@} -> $LL.Main.go12

$LL.Main.go30 :: W1 -> W1 -> W1 -> W7
$LL.Main.go30 $0 $1 $2 = 7'case {1'$0, 1'$1, 1'$2} of
    {1'@, 1'@, 1'@} -> $LL.Main.go29

$LL.Main.go31 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Main.go31 $0 $1 $2 $3 = 7'case {1'$0, 1'$1, 1'$2, 1'$3} of
    {1'@, 1'@, 1'@, 1'@} -> $LL.Main.go7

$LL.Main.go34 :: W1 -> W7 -> W7
$LL.Main.go34 $0 $1 = 7'case {1'$0, 7'$1} of
    {1'@, 1'h0, 2'_, 1'h1, 1'@, 1'@, 1'@} -> $LL.Main.go31

$LL.Main.go35 :: W1 -> W1 -> W1 -> W7
$LL.Main.go35 $0 $1 $2 = {4'h1, 1'$0, 1'$1, 1'$2}

$LL.Main.go38 :: W3 -> W7
$LL.Main.go38 $0 = 7'case 3'$0 of
    {1'@, 1'@, 1'@} -> $LL.Main.go35

$LL.Pure.dispatch1 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Pure.dispatch1 $0 $1 $2 $3 = 7'case {1'$1, 1'$0, 1'$2, 1'$3} of
    {1'@, 1'@, 1'@, 1'@} -> $LL.Main.go2

$LL.Pure.dispatch2 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Pure.dispatch2 $0 $1 $2 $3 = 7'case {1'$0, 1'$1, 1'$2, 1'$3} of
    {1'@, 1'@, 1'@, 1'@} -> $LL.Pure.dispatch1

$LL.Pure.dispatch4 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Pure.dispatch4 $0 $1 $2 $3 = 7'case {1'$1, 1'$0, 1'$2, 1'$3} of
    {1'@, 1'@, 1'@, 1'@} -> $LL.Main.go1

$LL.Pure.dispatch5 :: W1 -> W1 -> W1 -> W1 -> W7
$LL.Pure.dispatch5 $0 $1 $2 $3 = 7'case {1'$0, 1'$1, 1'$2, 1'$3} of
    {1'@, 1'@, 1'@, 1'@} -> $LL.Pure.dispatch4

$LL.Pure.dispatch6 :: W1 -> W1 -> W1 -> W7
$LL.Pure.dispatch6 $0 $1 $2 = 7'case {1'$0, 1'$1, 1'$2} of
    {1'@, 1'@, 1'@} -> $LL.Main.go10

Main.go :: W1 -> W1 -> W7
Main.go $0 $1 = {5'h16, 1'$0, 1'$1}

ReWire.Prelude.&& :: W1 -> W1 -> W1
ReWire.Prelude.&& $0 $1 = 1'case {1'$0, 1'$1} of
    {1'h1, 1'@} -> Id
    _ -> 1'case {1'$0, 1'$1} of
      {1'h0, 1'_} -> 1'h0